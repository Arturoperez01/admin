{"version":3,"sources":["webpack:///./src/app/_directives/dynamic-form/componentes/dynamic-field/dynamic-field.directive.ts","webpack:///./src/app/_directives/dynamic-form/componentes/form-button/form-button.component.scss","webpack:///./src/app/_directives/dynamic-form/componentes/form-button/form-button.component.ts","webpack:///./src/app/_directives/dynamic-form/componentes/form-input/form-input.component.scss","webpack:///./src/app/_directives/dynamic-form/componentes/form-input/form-input.component.ts","webpack:///./src/app/_directives/dynamic-form/componentes/form-multiselect/form-multiselect.component.scss","webpack:///./src/app/_directives/dynamic-form/componentes/form-multiselect/form-multiselect.component.ts","webpack:///./src/app/_directives/dynamic-form/componentes/form-password/form-password.component.ts","webpack:///./src/app/_directives/dynamic-form/componentes/form-select/form-select.component.scss","webpack:///./src/app/_directives/dynamic-form/componentes/form-select/form-select.component.ts","webpack:///./src/app/_directives/dynamic-form/componentes/form-tags/form-tags.component.scss","webpack:///./src/app/_directives/dynamic-form/componentes/form-tags/form-tags.component.ts","webpack:///./src/app/_directives/dynamic-form/componentes/index.ts","webpack:///./src/app/_directives/dynamic-form/dynamic-form.component.scss","webpack:///./src/app/_directives/dynamic-form/dynamic-form.component.ts","webpack:///./src/app/_models/roles/roles-config.ts","webpack:///./src/app/dashboard/componentes/footer/footer.component.html","webpack:///./src/app/dashboard/componentes/footer/footer.component.ts","webpack:///./src/app/dashboard/componentes/navigation/navigation.component.html","webpack:///./src/app/dashboard/componentes/navigation/navigation.component.scss","webpack:///./src/app/dashboard/componentes/navigation/navigation.component.ts","webpack:///./src/app/dashboard/dashboard-routing.module.ts","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.html","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/homePage/homePage.component.html","webpack:///./src/app/dashboard/homePage/homePage.component.scss","webpack:///./src/app/dashboard/homePage/homePage.component.ts","webpack:///./src/app/dashboard/rolesPage/rolesPage.component.html","webpack:///./src/app/dashboard/rolesPage/rolesPage.component.scss","webpack:///./src/app/dashboard/rolesPage/rolesPage.component.ts","webpack:///./src/app/dashboard/userPage/UserForm.service.ts","webpack:///./src/app/dashboard/userPage/edit-user/userEdit.component.html","webpack:///./src/app/dashboard/userPage/edit-user/userEdit.component.ts","webpack:///./src/app/dashboard/userPage/userPage.component.html","webpack:///./src/app/dashboard/userPage/userPage.component.scss","webpack:///./src/app/dashboard/userPage/userPage.component.ts","webpack:///./src/app/dynamic-form.module.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { ComponentFactoryResolver, ComponentRef, Directive, OnChanges, Input, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { FormButtonComponent, FormInputComponent, FormSelectComponent, FormPasswordComponent, FormTagsComponent, FormMultiComponent} from '../'\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\n\r\nconst components = {\r\n    button: FormButtonComponent,\r\n    input: FormInputComponent,\r\n    select: FormSelectComponent,\r\n    password: FormPasswordComponent,\r\n    tags: FormTagsComponent,\r\n    multiselect: FormMultiComponent\r\n  };\r\n\r\n@Directive({\r\n  selector: '[dynamicField]'\r\n})\r\nexport class DynamicFieldDirective implements Field, OnChanges, OnInit {\r\n  @Input()\r\n  config: FieldConfig;\r\n\r\n  @Input()\r\n  group: FormGroup;\r\n\r\n  component: ComponentRef<Field>;\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnChanges() {\r\n    if (this.component) {\r\n      this.component.instance.config = this.config;\r\n      this.component.instance.group = this.group;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!components[this.config.type]) {\r\n      const supportedTypes = Object.keys(components).join(', ');\r\n      throw new Error(\r\n        `Trying to use an unsupported type (${this.config.type}).\r\n        Supported types: ${supportedTypes}`\r\n      );\r\n    }\r\n    //const component = components[this.config.type];\r\n    const factory = this.resolver.resolveComponentFactory<Field>(components[this.config.type]);\r\n    this.component = this.container.createComponent(factory);\r\n    \r\n    this.component.instance.config = this.config;\r\n    this.component.instance.group = this.group;\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19kaXJlY3RpdmVzL2R5bmFtaWMtZm9ybS9jb21wb25lbnRlcy9mb3JtLWJ1dHRvbi9mb3JtLWJ1dHRvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\n\r\n@Component({\r\n  selector: 'form-button',\r\n  styleUrls: ['form-button.component.scss'],\r\n  template: `\r\n   <div \r\n      class=\"dynamic-field form-button\"\r\n      [formGroup]=\"group\">\r\n      <button\r\n      mdbBtn \r\n      color=\"primary\"\r\n      [disabled]=\"config.disabled\"\r\n      type=\"submit\"\r\n      mdbWavesEffect>\r\n        {{ config.label }}\r\n      </button>\r\n    </div>\r\n  `,\r\n})\r\nexport class FormButtonComponent implements Field {\r\n  config: FieldConfig;\r\n  group: FormGroup;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19kaXJlY3RpdmVzL2R5bmFtaWMtZm9ybS9jb21wb25lbnRlcy9mb3JtLWlucHV0L2Zvcm0taW5wdXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, ViewContainerRef } from '@angular/core';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Field } from '../../models/field.interface';\r\n\r\n\r\n@Component({\r\n  selector: 'form-input',\r\n  styleUrls: ['form-input.component.scss'],\r\n  template: `\r\n    <div \r\n      class=\"md-form\" \r\n      [formGroup]=\"group\">\r\n      <label class=\"float-left\">{{ config.label }}</label>\r\n      <input\r\n        mdbInput\r\n        mdbValidate \r\n        type=\"text\" \r\n        class=\"form-control\"\r\n        [attr.placeholder]=\"config.placeholder\"\r\n        [formControlName]=\"config.name\" />          \r\n      <mat-error *ngIf=\"validate.invalid && (validate.dirty || validate.touched)\">Input invalid</mat-error>\r\n    </div>\r\n  `,\r\n})\r\nexport class FormInputComponent implements Field  {\r\n  config: FieldConfig;\r\n  group: FormGroup;\r\n  \r\n  get validate() { return this.group.get(this.config.name); }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19kaXJlY3RpdmVzL2R5bmFtaWMtZm9ybS9jb21wb25lbnRlcy9mb3JtLW11bHRpc2VsZWN0L2Zvcm0tbXVsdGlzZWxlY3QuY29tcG9uZW50LnNjc3MifQ== */\"","\r\nimport { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\n\r\n@Component({\r\n  selector: 'form-select',\r\n  styleUrls: ['form-multiselect.component.scss'],\r\n  template: `\r\n    <mat-form-field\r\n      [formGroup]=\"group\">\r\n      <mat-label>{{ config.label }}</mat-label>\r\n      <mat-select [formControlName]=\"config.name\"  multiple>\r\n        <mat-option *ngFor=\"let option of config.options\" [value]=\"option.key\">\r\n          {{ option.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  `,\r\n})\r\nexport class FormMultiComponent implements Field {\r\n  config;\r\n  group: FormGroup;\r\n\r\n}","import { Component, ViewContainerRef } from '@angular/core';\r\nimport { FieldConfig } from '../../models/field-config.interface';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'form-password',\r\n  template: `\r\n    <div \r\n      class=\"md-form\" \r\n      [formGroup]=\"group\">\r\n      \r\n      <label class=\"float-left\">{{ config.label }}</label>\r\n      <input\r\n        mdbInput\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        [attr.placeholder]=\"config.placeholder\"\r\n        [formControlName]=\"config.name\" />\r\n        <mat-error *ngIf=\"validate.invalid && (validate.dirty || validate.touched)\">Input invalid</mat-error>\r\n    </div>\r\n  `,\r\n})\r\n\r\nexport class FormPasswordComponent {\r\n  config: FieldConfig;\r\n  group: FormGroup;\r\n  get validate() { return this.group.get(this.config.name); }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19kaXJlY3RpdmVzL2R5bmFtaWMtZm9ybS9jb21wb25lbnRlcy9mb3JtLXNlbGVjdC9mb3JtLXNlbGVjdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\n\r\n@Component({\r\n  selector: 'form-select',\r\n  styleUrls: ['form-select.component.scss'],\r\n  template: `\r\n    <mat-form-field\r\n      [formGroup]=\"group\">\r\n      <mat-label>{{ config.label }}</mat-label>\r\n      <mat-select [formControlName]=\"config.name\">\r\n        <mat-option [value]=\"\">{{ config.placeholder }}</mat-option>\r\n        <mat-option *ngFor=\"let option of config.options\" [value]=\"option.key\">\r\n          {{ option.name }}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  `,\r\n})\r\nexport class FormSelectComponent implements Field {\r\n  config;\r\n  group: FormGroup;\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19kaXJlY3RpdmVzL2R5bmFtaWMtZm9ybS9jb21wb25lbnRlcy9mb3JtLXRhZ3MvZm9ybS10YWdzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component } from '@angular/core';\r\nimport { FormGroup, FormArray, FormBuilder, FormControl, Form } from '@angular/forms';\r\n\r\nimport { Field } from '../../models/field.interface';\r\n//Todo: poder colocar multiples tags\r\n@Component({\r\n  selector: 'form-tags',\r\n  styleUrls: ['form-tags.component.scss'],\r\n  template: `\r\n  <div class=\"row\" [formGroup]=\"group\">\r\n      <div class=\"form-group col-md-12\">\r\n      <h3 class=\"text-left\">{{this.config['name']}}</h3>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-10\" >\r\n                <input \r\n                mdbInput\r\n                [attr.placeholder]=\"config.placeholder\"\r\n                 type=\"text\" class=\"form-control mt-2\" id=\"{{this.config['name']}}Tags\" name=\"{{this.config['name']}}Tags\" #newTags>\r\n          </div>\r\n          <div clas=\"col-md-2\">\r\n            <span class=\"round btn-sm primary-color float-right \" (click)=\"addTags(newTags)\">\r\n                <i class=\"fa fa-plus\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n      <label class=\"text-left\" *ngIf=\"!tagsArray || tagsArray.length==0; else empty\">\r\n          No {{this.config['name']}} assigned\r\n      </label>\r\n    </div>\r\n\r\n    <!-- NO tags -->\r\n      <ng-template #empty>\r\n        <div formArrayName=\"{{this.config['name']}}\" class=\"col-md-12\">\r\n          \r\n          <div *ngFor=\"let address of tagsArray.controls; let i=index\" class=\"row\" >\r\n            <!-- The repeated alias template -->\r\n            <div class=\"col-md-10 mt-2\">\r\n              tag:\r\n              <input type=\"text\" [formControlName]=\"i\">\r\n            <span class=\"round btn-sm danger-color float-right\" (click)=\"removeRole(i)\"><i class=\"fa fa-trash\"></i></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </ng-template>\r\n  </div>\r\n  `,\r\n})\r\nexport class FormTagsComponent implements Field {\r\n\r\n  config;\r\n\r\n  group: FormGroup;\r\n  \r\n  constructor(\r\n    private fb: FormBuilder\r\n    ){}\r\n  \r\n    get tagsArray(): FormArray {\r\n      //console.log(this.group.get('preguntasPlantilla'));\r\n      //console.log(this.config['name'],this.group.get(this.config['name']));\r\n      return this.group.get(this.config['name']) as FormArray;\r\n    }\r\n    //*/\r\n  \r\n    addTags(tag){\r\n      //this.group.get(this.config['name']).push(tag);\r\n      console.log(tag);\r\n      this.tagsArray.push(this.getTagFormGroup(tag.value));\r\n      console.log(this.tagsArray);\r\n    };\r\n    \r\n    getTagFormGroup(tag){\r\n      return this.fb.control(tag);\r\n      /*\r\n      return this.fb.group({\r\n        tag\r\n      });\r\n      //*/\r\n    }\r\n    //*/\r\n    removeRole(index){\r\n      this.tagsArray.removeAt(index);\r\n    };\r\n\r\n}","export * from \"./form-button/form-button.component\";\r\nexport * from \"./form-input/form-input.component\";\r\nexport * from \"./form-password/form-password.component\";\r\nexport * from \"./form-select/form-select.component\";\r\nexport * from \"./form-tags/form-tags.component\";\r\nexport * from \"./form-multiselect/form-multiselect.component\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19kaXJlY3RpdmVzL2R5bmFtaWMtZm9ybS9keW5hbWljLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Input, OnInit, Output, OnChanges, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\nimport { FieldConfig } from './models/field-config.interface';\r\n\r\n@Component({\r\n  exportAs: 'dynamicForm',\r\n  selector: 'dynamic-form',\r\n  styleUrls: ['dynamic-form.component.scss'],\r\n  template: `\r\n    <form\r\n      class=\"dynamic-form\"\r\n      [formGroup]=\"form\"\r\n      (submit)=\"handleSubmit($event)\">\r\n        <ng-container\r\n          *ngFor=\"let field of config;\"\r\n          dynamicField\r\n          [config]=\"field\"\r\n          [group]=\"form\">\r\n        </ng-container>\r\n    </form>\r\n  `\r\n})\r\nexport class DynamicFormComponent implements OnChanges, OnInit {\r\n  @Input()\r\n  config: FieldConfig[] = [];\r\n  \r\n  @Output()\r\n  submit: EventEmitter<any> =new EventEmitter();\r\n\r\n  form: FormGroup;\r\n\r\n  get controls() { return this.config.filter(({type}) => type !== 'button'); }\r\n  get changes() { return this.form.valueChanges; }\r\n  get valid() { return this.form.valid; }\r\n  get value() { return this.form.value; }\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.createGroup();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.form) {\r\n      const controls = Object.keys(this.form.controls);\r\n      const configControls = this.controls.map((item) => item.name);\r\n\r\n      controls\r\n        .filter((control) => !configControls.includes(control))\r\n        .forEach((control) => this.form.removeControl(control));\r\n\r\n      configControls\r\n        .filter((control) => !controls.includes(control))\r\n        .forEach((name) => {\r\n          const config = this.config.find((control) => control.name === name);\r\n          this.form.addControl(name, this.createControl(config));\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  createGroup() {\r\n    const group = this.fb.group({});\r\n    this.controls.forEach(control => group.addControl(control.name, this.createControl(control)));\r\n    //this.config.forEach(control => group.addControl(control.name, this.fb.control({ disabled: control.disabled, value: control.value },control.validation)) );\r\n    return group;\r\n  }\r\n\r\n  createControl(config: FieldConfig) {\r\n    const { disabled, validation, value } = config;\r\n    //if (Array.isArray(value)){return this.fb.array(value)};\r\n    return this.fb.control({ disabled, value }, validation);\r\n  }\r\n\r\n  handleSubmit(event: Event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.submit.emit(this.value);\r\n  }\r\n\r\n  setDisabled(name: string, disable: boolean) {\r\n    if (this.form.controls[name]) {\r\n      const method = disable ? 'disable': 'enable';\r\n      this.form.controls[name][method]();\r\n      return;\r\n    }\r\n\r\n    this.config = this.config.map((item) => {\r\n      if (item.name === name) {\r\n        item.disabled = disable;\r\n      }\r\n      return item;\r\n    });\r\n  }\r\n\r\n  setValue(name: string, value: any) {\r\n    this.form.controls[name].setValue(value, {emitEvent: true});\r\n  }\r\n}","import { RolesBase } from \"./roles.base\";\r\n\r\nimport { Validators } from '@angular/forms';\r\nimport { FieldConfig } from \"../../_directives/dynamic-form/models/field-config.interface\";\r\n\r\n//Campos necesarios\r\nconst config: FieldConfig[] = [\r\n    \r\n  {\r\n    type: 'input',\r\n    label: 'Nombre completo',\r\n    name: 'nombre',\r\n    placeholder: 'Introduzca el nombre',\r\n    validation: [Validators.required]\r\n  },\r\n  {\r\n    label: 'Submit',\r\n    name: 'submit',\r\n    type: 'button'\r\n  },\r\n];\r\n\r\nexport class RolesConfig  {\r\n  //get config() { return config.filter(({type}) => type !== 'button'); }\r\n\r\n  roles;\r\n\r\n    constructor(\r\n      ){\r\n        this.roles = config;\r\n      }\r\n  \r\n  setValues(roles: RolesBase){\r\n    Object.keys(roles).forEach(keys=>\r\n                              this.roles=config.filter(\r\n                                        (rolesConfig)=>{\r\n                                          if(keys==rolesConfig.name){\r\n                                            rolesConfig.value = roles[keys]\r\n                                          }\r\n                                          return roles\r\n                                        }\r\n                                    )\r\n                              )\r\n    }\r\n\r\n    config(){\r\n      return this.roles;\r\n    }\r\n  }\r\n","module.exports = \"\\r\\n<!-- footer class=\\\"main-footer\\\">\\r\\n    <div class=\\\"pull-right hidden-xs\\\">\\r\\n      <b>Version</b> 1.0.1\\r\\n    </div>\\r\\n    <strong>Copyright © 2018-19 Konecta.</strong> Todos los derechos reservados.\\r\\n</footer--> \\r\\n\\r\\n    <!--Footer-->\\r\\n    <footer class=\\\"page-footer text-center font-small primary-color-dark darken-2 mt-4 wow fadeIn  \\\">\\r\\n\\r\\n      <!--Call to action-->\\r\\n      <!--/.Call to action-->\\r\\n\\r\\n      <hr class=\\\"my-4\\\">\\r\\n\\r\\n      <!--Copyright-->\\r\\n      <div class=\\\"footer-copyright py-3\\\">\\r\\n          © 2018-19 Copyright:\\r\\n          <strong>Copyright © 2018-19 Arturo Perez.</strong> Todos los derechos reservados.\\r\\n      </div>\\r\\n      <!--/.Copyright-->\\r\\n\\r\\n  </footer>\\r\\n  <!--/.Footer-->\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html'\r\n  //styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-drawer-container class=\\\"example-container\\\">\\r\\n    \\r\\n        <!-- Sidebar -->\\r\\n    <!-- div class=\\\"sidebar-fixed position-fixed collapse\\\">\\r\\n\\r\\n        <a class=\\\"logo-wrapper waves-effect\\\">\\r\\n            <img src=\\\"../../../../assets/img/angular-mdb.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">\\r\\n        </a>\\r\\n\\r\\n        <div class=\\\"list-group list-group-flush\\\">\\r\\n\\r\\n            <a routerLink=\\\"dashboards/v1\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item list-group-item-action waves-effect\\\">\\r\\n                <mdb-icon fas icon=\\\"users\\\" class=\\\"mr-3\\\"></mdb-icon>Users\\r\\n            </a>\\r\\n            <a routerLink=\\\"profiles/profile1\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item list-group-item-action waves-effect\\\">\\r\\n                <mdb-icon fas icon=\\\"user\\\" class=\\\"mr-3\\\"></mdb-icon>Profile</a>\\r\\n            <a routerLink=\\\"tables/table1\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item list-group-item-action waves-effect\\\">\\r\\n                <mdb-icon fas icon=\\\"table\\\" class=\\\"mr-3\\\"></mdb-icon>Tables</a>\\r\\n            <a routerLink=\\\"maps/map1\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item list-group-item-action waves-effect\\\">\\r\\n                <mdb-icon far icon=\\\"map\\\" class=\\\"mr-3\\\"></mdb-icon>Maps</a>\\r\\n            <a routerLink=\\\"nonExistingPath\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item list-group-item-action waves-effect\\\">\\r\\n                <mdb-icon fas icon=\\\"exclamation\\\" class=\\\"mr-3\\\"></mdb-icon>404</a>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div -->\\r\\n    <!-- Sidebar -->\\r\\n\\r\\n    <!--Navbar-->\\r\\n    <div class=\\\"navbar navbar-expand-lg fixed-top primary-color\\\">\\r\\n        \\r\\n            <!-- ul class=\\\"navbar-nav mr-auto\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <button class=\\\"nav-link\\\" (click)=\\\"side.toggle()\\\" >\\r\\n                        <mdb-icon fas icon=\\\"bars\\\"></mdb-icon>\\r\\n                    </button>\\r\\n                </li>\\r\\n                <button type=\\\"button\\\" mat-button (click)=\\\"drawer.toggle()\\\">\\r\\n                  Toggle sidenav\\r\\n                </button>\\r\\n            <ul-->\\r\\n\\r\\n            <div class=\\\"example-sidenav-content\\\">\\r\\n                    <button type=\\\"button\\\" mat-button (click)=\\\"side.toggle()\\\">\\r\\n                        <mdb-icon fas icon=\\\"bars\\\"></mdb-icon>\\r\\n                    </button>\\r\\n            </div>\\r\\n\\r\\n            <ul class=\\\"navbar-nav ml-auto nav-flex-icons\\\">\\r\\n                    <li class=\\\"nav-item avatar dropdown\\\" mdbDropdown *ngIf=\\\"login!=null\\\">\\r\\n                      <a mdbDropdownToggle type=\\\"button\\\"  color=\\\"primary\\\" class=\\\"dropdown-toggle nav-link waves-light\\\"\\r\\n                      mdbWavesEffect>\\r\\n                          Welcome {{login.username}}\\r\\n                      </a>\\r\\n                      <div class=\\\"dropdown-menu dropdown-primary\\\">\\r\\n                          <!--a class=\\\"dropdown-item\\\" routerLink=\\\"perfil\\\">Perfil</a>\\r\\n                          <div class=\\\"dropdown-divider\\\"></div-->\\r\\n                          <a class=\\\"dropdown-item\\\" (click)=\\\"logOff()\\\">Logout</a>\\r\\n                      </div>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n    </div>\\r\\n    <!--/.Navbar-->\\r\\n\\r\\n    <mat-drawer #side class=\\\"example-sidenav\\\" mode=\\\"side\\\" opened=\\\"true\\\">\\r\\n        <aside class=\\\"main-sidebar sidebar-fixed\\\" >\\r\\n            <section class=\\\"sidebar-menu tree\\\" data-widget=\\\"tree\\\" >\\r\\n                \\r\\n                    <a class=\\\"logo-wrapper waves-effect\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n                            <img src=\\\"/assets/angular-mdb.png\\\" class=\\\"img-fluid\\\" alt=\\\"\\\">\\r\\n                        </a>\\r\\n                    <!-- logo class=\\\"ml-3\\\">\\r\\n                            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['dashboard']\\\">\\r\\n                                <strong class=\\\"blue-text\\\">MDB</strong>\\r\\n                            </a>\\r\\n                    </logo -->\\r\\n                    <div class=\\\"sidebar-menu tree list-group list-group-flush\\\">\\r\\n                            <a  class=\\\"list-group-item list-group-item-action waves-effect\\\" (click)=\\\"user.toggle()\\\">\\r\\n                            <mdb-icon fas icon=\\\"cogs\\\" class=\\\"mr-3\\\"></mdb-icon>Administracion\\r\\n                            </a>          \\r\\n                            <div class=\\\"sidebar-menu tree list-group\\\" mdbCollapse #user=\\\"bs-collapse\\\">\\r\\n                            \\r\\n                                        <a [routerLink]=\\\"['user']\\\" class=\\\"list-group-item list-group-item-action waves-effect\\\" >\\r\\n                                            Usuarios\\r\\n                                        </a>\\r\\n                                        <a [routerLink]=\\\"['servicios']\\\" class=\\\"list-group-item list-group-item-action waves-effect\\\" >\\r\\n                                            Servicio\\r\\n                                        </a>\\r\\n                                        <a [routerLink]=\\\"['roles']\\\" class=\\\"list-group-item list-group-item-action waves-effect\\\">\\r\\n                                            Roles\\r\\n                                        </a>\\r\\n                            </div>\\r\\n\\r\\n                            <a  class=\\\"list-group-item list-group-item-action waves-effect\\\" (click)=\\\"evento.toggle()\\\">\\r\\n                                <mdb-icon fas icon=\\\"calendar-alt\\\" class=\\\"mr-3\\\"></mdb-icon>Eventos                               \\r\\n                            </a>          \\r\\n                            <div class=\\\"sidebar-menu tree list-group\\\" data-widget=\\\"tree\\\" mdbCollapse #evento=\\\"bs-collapse\\\">\\r\\n                                \\r\\n                                <a [routerLink]=\\\"['eventos']\\\" class=\\\"list-group-item list-group-item-action waves-effect\\\" >\\r\\n                                    lista de Eventos\\r\\n                                </a>\\r\\n                            </div>\\r\\n                    </div>\\r\\n            </section>\\r\\n        </aside>\\r\\n    </mat-drawer>\\r\\n</mat-drawer-container>\"","module.exports = \".navbar {\\n  height: 56px !important;\\n  box-shadow: 0 0px 0px 0 rgba(0, 0, 0, 0) !important; }\\n\\n.sidebar-fixed {\\n  height: 100vh;\\n  width: 270px;\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\\n  z-index: 1250 !important;\\n  background-color: #fff;\\n  padding-top: 0.5rem;\\n  position: fixed !important; }\\n\\n.sidebar-fixed .list-group .active {\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\\n  border-radius: 5px; }\\n\\n.sidebar-fixed .logo-wrapper {\\n  padding: 2.5rem; }\\n\\n.sidebar-fixed .logo-wrapper img {\\n  max-height: 50px; }\\n\\n@media (min-width: 1200px) {\\n  .navbar,\\n  .page-footer,\\n  main {\\n    padding-left: 270px; } }\\n\\n@media (max-width: 1199.98px) {\\n  .sidebar-fixed {\\n    display: none; } }\\n\\n.main-sidebar {\\n  background-color: #FFFFFF;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  padding-top: 56px;\\n  min-height: 100%;\\n  width: 230px;\\n  z-index: 750;\\n  -webkit-transition: -webkit-transform .3s ease-in-out,width .3s ease-in-out;\\n  -webkit-transition: width .3s ease-in-out,-webkit-transform .3s ease-in-out;\\n  transition: width .3s ease-in-out,-webkit-transform .3s ease-in-out;\\n  transition: transform .3s ease-in-out,width .3s ease-in-out;\\n  transition: transform .3s ease-in-out,width .3s ease-in-out,-webkit-transform .3s ease-in-out; }\\n\\n.aside {\\n  display: block; }\\n\\n.sidebar-menu {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  list-style: none;\\n  margin: 0;\\n  padding: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2NvbXBvbmVudGVzL25hdmlnYXRpb24vQzpcXHByb2plY3RzXFxhZG1pbi9zcmNcXGFwcFxcZGFzaGJvYXJkXFxjb21wb25lbnRlc1xcbmF2aWdhdGlvblxcbmF2aWdhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBSTtFQUNFLHdCQUF1QjtFQUN2QixvREFBbUQsRUFDcEQ7O0FBRUQ7RUFDQSxjQUFhO0VBQ2IsYUFBWTtFQUVaLDhFQUE2RTtFQUM3RSx5QkFBd0I7RUFDeEIsdUJBQXNCO0VBQ3RCLG9CQUFtQjtFQUNuQiwyQkFBMEIsRUFDekI7O0FBRUQ7RUFFQSw4RUFBNkU7RUFFN0UsbUJBQWtCLEVBQUc7O0FBRXJCO0VBQ0EsZ0JBQWUsRUFBRzs7QUFFbEI7RUFDQSxpQkFBZ0IsRUFBRzs7QUFFckI7RUFDRTs7O0lBR0Usb0JBQW1CLEVBQUcsRUFBQTs7QUFHMUI7RUFDRTtJQUNFLGNBQWEsRUFBRyxFQUFBOztBQUdoQjtFQUNFLDBCQUF5QjtFQUN6QixtQkFBa0I7RUFDbEIsT0FBTTtFQUNOLFFBQU87RUFDUCxrQkFBaUI7RUFDakIsaUJBQWdCO0VBQ2hCLGFBQVk7RUFDWixhQUFZO0VBQ1osNEVBQTJFO0VBRzNFLDRFQUEyRDtFQUEzRCxvRUFBMkQ7RUFBM0QsNERBQTJEO0VBQTNELDhGQUEyRCxFQUM5RDs7QUFFRDtFQUNJLGVBQWMsRUFDakI7O0FBRUQ7RUFDSSxvQkFBbUI7RUFDbkIsaUJBQWdCO0VBQ2hCLGlCQUFnQjtFQUNoQixVQUFTO0VBQ1QsV0FBVSxFQUNiIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2NvbXBvbmVudGVzL25hdmlnYXRpb24vbmF2aWdhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiAgICAubmF2YmFyIHtcclxuICAgICAgaGVpZ2h0OiA1NnB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgIGJveC1zaGFkb3c6IDAgMHB4IDBweCAwIHJnYmEoMCwgMCwgMCwgMCkgIWltcG9ydGFudDtcclxuICAgIH1cclxuXHJcbiAgICAuc2lkZWJhci1maXhlZCB7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgd2lkdGg6IDI3MHB4O1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDJweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTYpLCAwIDJweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjEyKTtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgMnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG4gICAgei1pbmRleDogMTI1MCAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIHBhZGRpbmctdG9wOiAwLjVyZW07IFxyXG4gICAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLnNpZGViYXItZml4ZWQgLmxpc3QtZ3JvdXAgLmFjdGl2ZSB7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgMnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAycHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcbiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgfVxyXG4gIFxyXG4gICAgLnNpZGViYXItZml4ZWQgLmxvZ28td3JhcHBlciB7XHJcbiAgICBwYWRkaW5nOiAyLjVyZW07IH1cclxuICBcclxuICAgIC5zaWRlYmFyLWZpeGVkIC5sb2dvLXdyYXBwZXIgaW1nIHtcclxuICAgIG1heC1oZWlnaHQ6IDUwcHg7IH1cclxuICBcclxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAubmF2YmFyLFxyXG4gICAgLnBhZ2UtZm9vdGVyLFxyXG4gICAgbWFpbiB7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMjcwcHg7IH0gfVxyXG4gIFxyXG5cclxuICBAbWVkaWEgKG1heC13aWR0aDogMTE5OS45OHB4KSB7XHJcbiAgICAuc2lkZWJhci1maXhlZCB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gXHJcbiAgICB9XHJcblxyXG4gICAgICAubWFpbi1zaWRlYmFyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICBwYWRkaW5nLXRvcDogNTZweDtcclxuICAgICAgICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHdpZHRoOiAyMzBweDtcclxuICAgICAgICB6LWluZGV4OiA3NTA7XHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAuM3MgZWFzZS1pbi1vdXQsd2lkdGggLjNzIGVhc2UtaW4tb3V0O1xyXG4gICAgICAgIC1tb3otdHJhbnNpdGlvbjogLW1vei10cmFuc2Zvcm0gLjNzIGVhc2UtaW4tb3V0LHdpZHRoIC4zcyBlYXNlLWluLW91dDtcclxuICAgICAgICAtby10cmFuc2l0aW9uOiAtby10cmFuc2Zvcm0gLjNzIGVhc2UtaW4tb3V0LHdpZHRoIC4zcyBlYXNlLWluLW91dDtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzIGVhc2UtaW4tb3V0LHdpZHRoIC4zcyBlYXNlLWluLW91dDtcclxuICAgIH1cclxuXHJcbiAgICAuYXNpZGUge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuc2lkZWJhci1tZW51IHtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgIH0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport { store } from '../../../_auth/current-user';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../../_auth/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.scss']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n // @ViewChild('sidenav') sidenav: ElementRef;\r\n\r\n // clicked: boolean;\r\n login;\r\n // mode = new FormControl('over');\r\n\r\n  constructor(\r\n                private authService: AuthenticationService,\r\n                private router: Router\r\n              ) {\r\n ///   this.clicked = this.clicked === undefined ? false : true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.login = this.authService.getUser().subscribe(user => this.login = user, err => this.login = null);\r\n    store.currentUser$.subscribe(user =>this.login = user);\r\n    //this.router.navigate(['dashboard/login']);\r\n  }\r\n  \r\n  logOff(){\r\n    this.authService.logout();      \r\n    location.reload();  \r\n    this.router.navigateByUrl('/dashboard/login')\r\n  }\r\n/*\r\n  setClicked(val: boolean): void {\r\n    this.clicked = val;\r\n  }\r\n//*/\r\n}\r\n","// layput-routing.module.ts\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from \"./dashboard.component\";\r\nimport { HomePageComponent } from \"./homePage/homePage.component\";  \r\nimport { UserPageComponent } from \"./userPage/userPage.component\";\r\nimport { UserEditComponent } from \"./userPage/edit-user/userEdit.component\"\r\nimport { RolesPageComponent } from \"./rolesPage/rolesPage.component\";\r\nimport { AuthGuard }         from '../_auth/auth.guard';\r\nimport { LoginPageComponent } from \"./loginPage/loginPage.component\";\r\nimport { PageNotFoundComponent } from \"../pagenotfound.component\";\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: '',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '', component: DashboardComponent , canActivate: [AuthGuard], data:['ADMIN'],\r\n  children:\r\n  [\r\n      { path: 'home', component: HomePageComponent },\r\n      //{ path: 'perfil', loadChildren: '../home/perfil/perfil.module#PerfilModule' },\r\n      { path: 'user', component: UserPageComponent },\r\n      { path: 'roles', component: RolesPageComponent },\r\n      { path: 'user/:id', component: UserEditComponent },\r\n      { path: '**', component: PageNotFoundComponent }\r\n    \r\n    /*\r\n    { path: '', component: HomePageComponent , //canActivateChild: [AuthGuard] , \r\n      children:\r\n        [\r\n          { path: 'home', component: HomePageComponent },\r\n          { path: 'user', component: UserPageComponent },\r\n          { path: 'user/:id', component: UserEditComponent }  \r\n        ]\r\n    }//*/\r\n  ]//*/\r\n  }\r\n  /*,\r\n  {\r\n    path: 'login',\r\n    component: LoginPageComponent\r\n  }\r\n  //*/\r\n//{ path: 'modals', component: ModalsComponent},\r\n//{ path: '**', component: NotFoundComponent },\r\n\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\n/*\r\ndeclare var $: any\r\ndeclare var require: any;\r\n\r\nimport {GLOBAL} from './../../config/config'\r\nimport { Services } from './../services/services';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport { Router, NavigationStart, Event as NavigationEvent } from '@angular/router';\r\nimport { ConsolidadoModel } from '../ausentismo/ausentismo/consolidado.model';\r\n//*/\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.html',\r\n  styles: ['./dashboard.component.scss'],\r\n  providers: [],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n    ngOnInit(){}\r\n}","module.exports = \"<app-navigation></app-navigation>\\r\\n  \\r\\n<main class=\\\"content-wrapper\\\">    \\r\\n    <div class=\\\"p-5\\\">\\r\\n        <alert class=\\\"mt-3\\\"></alert>  \\r\\n        <router-outlet>              \\r\\n        </router-outlet>    \\r\\n    </div>\\r\\n</main>\\r\\n\\r\\n<app-footer></app-footer>\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA  } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { DashboardComponent } from './dashboard.component';\r\n//import { IndexComponent } from './index/index.component';\r\nimport { MaterialModule } from '../material.module';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { SharedModule } from '../shared.module';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { InputsModule, WavesModule, ButtonsModule } from 'angular-bootstrap-md'\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\nimport { FooterComponent } from \"./componentes/footer/footer.component\";\r\nimport { NavigationComponent } from \"./componentes/navigation/navigation.component\";\r\nimport { UserPageComponent } from \"./userPage/userPage.component\"\r\nimport { UserEditComponent } from \"./userPage/edit-user/userEdit.component\"\r\nimport { RolesPageComponent } from \"./rolesPage/rolesPage.component\";\r\nimport { HomePageComponent } from \"./homePage/homePage.component\"\r\nimport { UserFormService } from './userPage/UserForm.service'\r\nimport { UserService } from '../_services/user.service'\r\nimport { AuthGuard }         from '../_auth/auth.guard';\r\nimport {LoginFormComponent} from '../_auth/login/login-form.component';\r\nimport {DynamicFormModule} from '../dynamic-form.module';\r\n/*\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { AuthGuard }                          from '../auth/auth.guard';\r\n//*/\r\n@NgModule({\r\n  imports: [\r\n    //...APP_MODULE_IMPORTS,\r\n    MDBBootstrapModule.forRoot(),\r\n    SharedModule,\r\n    //MaterialModule,\r\n    //MatSidenavModule,\r\n    DynamicFormModule,\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    WavesModule, \r\n    ButtonsModule, \r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    InputsModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n    NavigationComponent,    \r\n    FooterComponent,\r\n    UserPageComponent,\r\n    UserEditComponent,\r\n    RolesPageComponent,\r\n    HomePageComponent\r\n  ],\r\n  providers: [UserFormService],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA]\r\n})\r\nexport class DashboardModule {}\r\n","module.exports = \"<!-- Heading -->\\r\\n<div class=\\\"card mb-4 wow fadeIn\\\">\\r\\n\\r\\n    <!--Card content-->\\r\\n    <div class=\\\"card-body d-sm-flex justify-content-between\\\">\\r\\n    \\r\\n        <h4 class=\\\"mb-sm-0 pt-3\\\">\\r\\n        <a href=\\\"#\\\" target=\\\"_blank\\\">Home Page</a>\\r\\n        <span>/</span>\\r\\n        <span>Dashboard</span>\\r\\n        </h4>\\r\\n    \\r\\n    \\r\\n    </div>\\r\\n      \\r\\n</div>\\r\\n<!-- Heading -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9ob21lUGFnZS9ob21lUGFnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component }        from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '../../_auth'\r\nimport { AlertService } from '../../_services';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-homePage',\r\n  templateUrl: './homePage.component.html',\r\n  styleUrls: ['./homePage.component.scss'],\r\n  providers: [ AuthenticationService, AlertService ]\r\n})\r\nexport class HomePageComponent {\r\n  message: string;\r\n  login;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  \r\n  constructor(\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private authenticationService: AuthenticationService,\r\n                private alertService: AlertService\r\n              ) {\r\n    //this.setMessage();\r\n    //$(\".loader\").fadeOut(\"slow\");\r\n    \r\n    \r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'dashboard/';\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<!-- div class=\\\"full\\\">\\r\\n    <h3>All registered users:</h3>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let user of users\\\">\\r\\n            {{user.email}} ({{user.name}}\\r\\n            - <a (click)=\\\"deleteUser(user.id)\\\" class=\\\"text-danger\\\">Delete</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div-->\\r\\n    \\r\\n<mdb-card class=\\\"rounded\\\" cascade=\\\"true\\\" narrower=\\\"true\\\">\\r\\n\\r\\n    <!--Card image>\\r\\n    <div class=\\\"view view-cascade  gradient-card-header purple-gradient text-left\\\" >\\r\\n            <h4 class=\\\"card-header-title\\\"><strong>Usuarios</strong></h4>\\r\\n            <p>Todos los usuarios registrados: </p>\\r\\n    </div>\\r\\n    \\r\\n    <Card image-->\\r\\n\\r\\n    <div class=\\\"view view-cascade overlay blue-gradient lighten-1\\\">\\r\\n            <a class=\\\"round btn-lg success-color float-right\\\" (click)=\\\"test.toggle()\\\"><i class=\\\"fa-plus fas\\\"></i></a>\\r\\n            <h4 class=\\\"card-header-title pt-3 px-3\\\"><strong>Roles</strong></h4>\\r\\n            <p class=\\\"px-3\\\">Todos los roles registrados:</p>\\r\\n            <!-- mdb-icon far icon=\\\"money-bill-alt\\\" class=\\\"Secondary-color text-right\\\"></mdb-icon-->\\r\\n    </div>\\r\\n    \\r\\n    <mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">\\r\\n            \\r\\n        <div mdbCollapse #test=\\\"bs-collapse\\\">\\r\\n            \\r\\n            <div class=\\\"col-xs-12 col-md-4 offset-md-4 mb-4\\\">\\r\\n                    <h3 *ngIf=\\\"roles.length==0\\\">\\r\\n                        Agregar nuevo rol:\\r\\n                    </h3>\\r\\n                    <dynamic-form [config]=\\\"config\\\"  \\r\\n                    #form=\\\"dynamicForm\\\"\\r\\n                    (submit)=\\\"formSubmit($event)\\\"> </dynamic-form>\\r\\n            </div>\\r\\n            <hr>\\r\\n        </div>\\r\\n            <h1 class=\\\"p-3 mb-5 mt-5\\\" *ngIf=\\\"roles.length==0\\\">\\r\\n                No existen entradas en la base de datos\\r\\n            </h1>\\r\\n            <table *ngIf=\\\"roles.length!=0\\\" mdbTable>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Action</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr mdbTableCol *ngFor=\\\"let rol of roles\\\">\\r\\n                    <td>{{rol.name}}</td>\\r\\n                    <td><a class=\\\"round btn-sm danger-color\\\" (click)=\\\"deleteRoles(rol._id)\\\"><i class=\\\"fa-minus fas\\\"></i></a></td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n    </mdb-card-body>\\r\\n</mdb-card>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9yb2xlc1BhZ2Uvcm9sZXNQYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit }        from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\n\r\nimport { ViewChild, AfterViewInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { AlertService, RolesService } from 'src/app/_services';\r\nimport { RolesConfig } from '../../_models/roles/roles-config'\r\nimport { DynamicFormComponent } from '../../_directives/dynamic-form/dynamic-form.component'\r\nimport { delay } from 'q';\r\n\r\n@Component({\r\n  selector: 'app-rolesPage',\r\n  templateUrl: './rolesPage.component.html',\r\n  styleUrls: ['./rolesPage.component.scss'],\r\n  providers: [RolesService, RolesConfig]\r\n})\r\n\r\nexport class RolesPageComponent implements AfterViewInit {\r\n    \r\n  public roles=[];\r\n  \r\n  rolesconfig;\r\n  config;\r\n\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n\r\n  formSubmit(value) {    \r\n    this.rolesService.register(value)\r\n    .subscribe(\r\n        data => {\r\n          this.alertService.success(\"Se agrego un nuevo roles\");\r\n          this.getRoles();\r\n          //this.form.controls;\r\n        },\r\n        error => {\r\n            this.alertService.error(error);\r\n        });\r\n    //*/\r\n  }\r\n  \r\n  constructor(private rolesService: RolesService,\r\n              private alertService: AlertService,\r\n              private rolesConfig: RolesConfig) {\r\n    \r\n    this.rolesConfig = new RolesConfig();\r\n    this.config = this.rolesConfig.config();       \r\n    this.getRoles();\r\n  }\r\n\r\n  ngAfterViewInit() {    \r\n    let previousValid = this.form.valid;\r\n    \r\n    this.form.changes.subscribe(() => {\r\n      if (this.form.valid !== previousValid) {\r\n        previousValid = this.form.valid;\r\n        this.form.setDisabled('submit', !previousValid);\r\n      }\r\n    });\r\n    this.form.setDisabled('submit', true);\r\n  }\r\n\r\n  getRoles(){\r\n    this.rolesService.getAll()\r\n    .subscribe(\r\n        data => {\r\n          // console.log(data);\r\n          this.roles =data;\r\n        },\r\n        error => {\r\n         // console.log(error);\r\n            this.alertService.error(error);\r\n        });\r\n  }\r\n  deleteRoles(id) {\r\n    this.rolesService.delete(id)\r\n    .subscribe(\r\n        data => {\r\n          this.alertService.success(\"Eliminado Exitoso\");\r\n          this.getRoles();\r\n        },\r\n        error => {\r\n            this.alertService.error(error);\r\n        });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n//import { PreguntaFormValidatorsService } from './pregunta-form-validators.service';\r\nimport { RolesService} from '../../_services/roles.service';\r\nimport { Roles } from '../../_models/roles/roles'\r\n//import { IExamenFormInterface, IRespuestaVOFEnum, IRespuestaSeleccionEnum, PreguntaTipoEnum, IRespuestaItem, IPreguntaItem } from './examen-form.interface';\r\n//import { identifierModuleUrl } from '@angular/compiler';\r\n\r\n//const GLOBAL =  require('./../../assets/cunix.json')\r\n@Injectable()\r\nexport class UserFormService {\r\n    \r\n    public availableRespuesta;//= [...Object.values(IRespuestaVOFEnum)];\r\n    public form: FormGroup;\r\n\r\n  constructor(\r\n    //private preguntaValidatorsService: PreguntaFormValidatorsService,\r\n    private fb: FormBuilder,\r\n    private rolesSercvicio: RolesService\r\n    //, public _service: Services\r\n  ) {\r\n    this.form = this.fb.group({\r\n        _id: [],\r\n        name: ['', Validators.required],\r\n        email: ['', [Validators.required, Validators.email]],\r\n        password: ['', Validators.required],\r\n        username: ['', Validators.required],\r\n        roles: ['', Validators.required],\r\n        servicios: ['', Validators.required],\r\n        perfiles: this.fb.array([])\r\n    }/*, { validator: this.preguntaValidatorsService.formValidator()  }//*/\r\n    );\r\n  }\r\n  \r\n    \r\n    getRoles() {\r\n        return this.rolesSercvicio.getAll()\r\n    };    \r\n\r\n    \r\n    //*/\r\n}\r\n","module.exports = \"<!-- TITLE -->\\r\\n<div class=\\\"mb-40 mt-40\\\">\\r\\n    <h1>Edit User</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <form #editForm=\\\"ngForm\\\" *ngIf=\\\"user\\\">\\r\\n            <div class=\\\"row justify-content-md-center\\\">\\r\\n                <div class=\\\"col-md-10\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"username\\\">Username</label>\\r\\n                        <input mdbInput mdbValidate type=\\\"text\\\" id=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" class=\\\"form-control\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" required [disabled]=\\\"user._id\\\"><!--formControlName=\\\"username\\\"  class=\\\"form-control\\\"-->\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"username\\\">Correo</label>\\r\\n                        <input mdbInput mdbValidate type=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" class=\\\"form-control\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" required><!--formControlName=\\\"email\\\" class=\\\"form-control\\\"-->\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"username\\\">name</label>\\r\\n                        <input mdbInput mdbValidate type=\\\"text\\\"  id=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" class=\\\"form-control\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" required><!-- formControlName=\\\"name\\\"  class=\\\"form-control\\\"-->\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <mat-form-field appearance=\\\"form-control\\\">\\r\\n                        <mat-label>Servicios</mat-label>\\r\\n                        <mat-select  [(ngModel)]=\\\"user.servicios\\\" name=\\\"userservicios\\\" #userservicios=\\\"ngModel\\\" required multiple> \\r\\n                            <mat-option *ngFor=\\\"let servicio of servicios\\\" [value]=\\\"servicio.nombre\\\">\\r\\n                            {{ servicio.nombre }}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n          \\r\\n                    <div class=\\\"form-group \\\" *ngIf=\\\"roles\\\">\\r\\n                      <mat-form-field appearance=\\\"form-control\\\" >\\r\\n                        <mat-label>Roles</mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"user.roles\\\" name=\\\"userroles\\\" #userroles=\\\"ngModel\\\" required multiple>\\r\\n                          <mat-option *ngFor=\\\"let rol of roles\\\" [value]=\\\"rol.name\\\">\\r\\n                            {{ rol.name }}\\r\\n                          </mat-option>\\r\\n                        </mat-select>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!user._id\\\">\\r\\n                        <label for=\\\"name\\\">Password</label>\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"  class=\\\"form-control mb-4\\\" placeholder=\\\"Colocar contraseña\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required><!--formControlName=\\\"password\\\"-->\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!user._id\\\">\\r\\n                        <label for=\\\"name\\\">Password confirm</label>\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordConfirm\\\" [(ngModel)]=\\\"user.passwordConfirm\\\" name=\\\"passwordConfirm\\\" #passwordConfirm=\\\"ngModel\\\" required>\\r\\n                    </div>\\r\\n                    <div class=\\\"mt-40\\\">\\r\\n                        <button class=\\\"btn btn-info\\\" *ngIf=\\\"user._id\\\" data-toggle=\\\"modal\\\" data-target=\\\"#changePasswordModal\\\">Change Password</button>\\r\\n                        <button class=\\\"btn btn-primary pull-right\\\" color=\\\"primary\\\" [disabled]=\\\"editForm.invalid\\\" (click)=\\\"save()\\\">Save</button>\\r\\n                        <button class=\\\"btn btn-secondary pull-right mr-2\\\" [routerLink]=\\\"['/dashboard/user']\\\">Back To User List</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"changePasswordModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\"><i class=\\\"fa fa-lock\\\"></i>&nbsp;&nbsp;Change password</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                  </button>\\r\\n            </div>\\r\\n            <form #changePasswordForm=\\\"ngForm\\\" class=\\\"container-fluid\\\">\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"row justify-content-md-center\\\">\\r\\n                        <div class=\\\"col-10\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"passwordAdmin\\\">Password Admin</label>\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordAdmin\\\" [(ngModel)]=\\\"passwordAdmin\\\" name=\\\"passwordAdmin\\\" #passwordAdminForm=\\\"ngModel\\\" required>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"passwordNew\\\">New Password</label>\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordNew\\\" [(ngModel)]=\\\"passwordNew\\\" name=\\\"passwordNew\\\" #passwordNewForm=\\\"ngModel\\\" required>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"passwordNewConfirm\\\">Confirm New Password</label>\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordNewConfirm\\\" [(ngModel)]=\\\"passwordNewConfirm\\\" name=\\\"passwordNewConfirm\\\" #passwordNewConfirmForm=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': passwordNew && passwordNewConfirm && passwordNew !== passwordNewConfirm}\\\"\\r\\n                                    required>\\r\\n                                <p *ngIf=\\\"passwordNew && passwordNewConfirm && passwordNew !== passwordNewConfirm\\\" class=\\\"help-block\\\">Passwords missmatch</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n            <div *ngIf=\\\"showError\\\" class=\\\"row justify-content-md-center\\\">\\r\\n                <div class=\\\"alert alert-danger text-left\\\">\\r\\n                    <strong>Error!</strong> Admin passsword not valid\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" #closeModal class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"changePasswordForm.invalid || (passwordAdmin && passwordNewConfirm && passwordNew !== passwordNewConfirm)\\\" (click)=\\\"changePassword()\\\">Save</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core';\r\nimport { User } from '../../../_models/user/user';\r\nimport { UserService } from '../../../_services/user.service';\r\nimport { AuthenticationService } from '../../../_auth/authentication.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SHA3 } from 'sha3';\r\nimport { ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport { UserFormService } from '../UserForm.service';\r\n\r\ndeclare var jQuery: any;\r\n/**\r\n * Edit user by Admin\r\n */\r\n@Component({\r\n    selector: 'app-user-edit',\r\n    templateUrl: './userEdit.component.html',\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n\r\n    user: User;\r\n    passwordNew: string;\r\n    passwordNewConfirm: string;\r\n    passwordAdmin: string;\r\n    showError: boolean;\r\n    servicios;\r\n    roles;\r\n\r\n    @ViewChild('closeModal') closeModal: ElementRef;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private userFormService: UserFormService,\r\n        private userService: UserService,\r\n        private authenticationService: AuthenticationService,\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ) { \r\n        this.userFormService.getRoles().subscribe(response=>{\r\n                                                                this.roles=response;\r\n                                                            }\r\n                                                    );    \r\n        \r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.route.params.subscribe(params => {\r\n\r\n            if (params.id === 'new') {\r\n                // New User\r\n\r\n                this.user = new User(null, null, null, []);\r\n                \r\n            } else {\r\n                // Get User\r\n                this.userService.getById(params.id).subscribe(user => {\r\n                    this.user = user;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save or create User\r\n     */\r\n    save(): void {\r\n        if (this.user._id) {\r\n            // Save\r\n            this.userService.update(this.user).subscribe(data => this.router.navigateByUrl('/dashboard/user'));\r\n        } else {\r\n            // Create\r\n            const hash = new SHA3(512);\r\n            hash.update(this.user.password);\r\n            this.user.password = hash.digest('hex');\r\n            this.userService.register(this.user).subscribe(data => this.router.navigateByUrl('/dashboard/user'));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete user\r\n     */\r\n    deleteUser(): void {\r\n        this.userService.delete(this.user._id).subscribe(data => this.router.navigateByUrl('/dashboard/user'));\r\n    }\r\n\r\n\r\n    \r\n    changePassword() {\r\n        const hashNewPwd = new SHA3(512);\r\n        hashNewPwd.update(this.passwordNew);\r\n        var passwordNew = hashNewPwd.digest('hex');\r\n\r\n        const hash = new SHA3(512);\r\n        hash.update(this.passwordAdmin);\r\n        var passwordAdmin = hash.digest('hex');\r\n\r\n        this.userService.changePassword(this.user._id, passwordNew, passwordAdmin).subscribe(data => {\r\n            this.passwordAdmin = null;\r\n            this.passwordNew = null;\r\n            this.passwordNewConfirm = null;\r\n            this.showError = false;\r\n            this.closeModal.nativeElement.click();\r\n        }, err => {\r\n            this.showError = true;\r\n        });\r\n    }\r\n\r\n    trackByFn(index: number, item: any) {\r\n        return index;\r\n    }\r\n}\r\n","module.exports = \"<!-- div class=\\\"full\\\">\\r\\n    <h3>All registered users:</h3>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let user of users\\\">\\r\\n            {{user.email}} ({{user.name}}\\r\\n            - <a (click)=\\\"deleteUser(user.id)\\\" class=\\\"text-danger\\\">Delete</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div-->\\r\\n    \\r\\n<mdb-card class=\\\"rounded\\\" cascade=\\\"true\\\" narrower=\\\"true\\\">\\r\\n\\r\\n    <!--Card image>\\r\\n    <div class=\\\"view view-cascade  gradient-card-header purple-gradient text-left\\\" >\\r\\n            <h4 class=\\\"card-header-title\\\"><strong>Usuarios</strong></h4>\\r\\n            <p>Todos los usuarios registrados: </p>\\r\\n    </div>\\r\\n    \\r\\n    <Card image-->\\r\\n\\r\\n    <div class=\\\"view view-cascade overlay blue-gradient lighten-1\\\">\\r\\n            <a class=\\\"round btn-lg success-color float-right\\\" [routerLink]=\\\"['new']\\\"><i class=\\\"fa-plus fas\\\"></i></a>\\r\\n            <h4 class=\\\"card-header-title pt-3 px-3\\\"><strong>Usuarios</strong></h4>\\r\\n            <p class=\\\"px-3\\\">Todos los usuarios registrados:</p>\\r\\n            <!-- mdb-icon far icon=\\\"money-bill-alt\\\" class=\\\"Secondary-color text-right\\\"></mdb-icon-->\\r\\n    </div>\\r\\n    \\r\\n    <mdb-card-body cascade=\\\"true\\\" class=\\\"text-center\\\">\\r\\n            \\r\\n            <h1 class=\\\"p-3 mb-5 mt-5\\\" *ngIf=\\\"users.length==0\\\">\\r\\n                No existen entradas en la base de datos\\r\\n            </h1>\\r\\n            <table *ngIf=\\\"users.length!=0\\\" mdbTable>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Correo</th>\\r\\n                        <th>name</th>\\r\\n                        <th>rol</th>\\r\\n                        <th>perfil</th>\\r\\n                        <th>servicio</th>\\r\\n                        <th></th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr mdbTableCol *ngFor=\\\"let user of users\\\">\\r\\n                    <td>{{user.email}}</td>\\r\\n                    <td>{{user.username}}</td>\\r\\n                    <td><span *ngFor=\\\"let rol of user.roles\\\" class=\\\"badge badge-primary mx-1\\\">{{rol}}</span>&nbsp;</td>\\r\\n                    <td><span *ngFor=\\\"let perfile of user.perfiles\\\" class=\\\"badge badge-primary mx-1\\\">{{perfile}}</span> </td>\\r\\n                    <td><span *ngFor=\\\"let servicio of user.servicios\\\" class=\\\"badge badge-primary mx-1\\\">{{servicio}}</span> </td>\\r\\n                    <td>\\r\\n                        <a class=\\\"round btn-sm danger-color float-right mx-1\\\" (click)=\\\"deleteUser(user._id)\\\"><i class=\\\"fa-minus fas\\\"></i></a>\\r\\n                        <a class=\\\"round btn-sm success-color float-right mx-1\\\" [routerLink]=\\\"[user._id]\\\"><i class=\\\"fa-pencil-alt fas\\\"></i></a>\\r\\n                    </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>    \\r\\n    </mdb-card-body>\\r\\n</mdb-card>\\r\\n\"","module.exports = \".classic-admin-card .card-body {\\n  color: #fff;\\n  margin-bottom: 0;\\n  padding: 0.9rem; }\\n\\n.classic-admin-card .card-body p {\\n  font-size: 13px;\\n  opacity: 0.7;\\n  margin-bottom: 0; }\\n\\n.classic-admin-card .card-body h4 {\\n  margin-top: 10px; }\\n\\n.classic-admin-card .card-body .float-right .fa {\\n  font-size: 3rem;\\n  opacity: 0.5; }\\n\\n.classic-admin-card .progress {\\n  margin: 0;\\n  opacity: 0.7; }\\n\\n.table-ui {\\n  border: 1px solid #e0e0e9; }\\n\\n.blue-gradient {\\n  background: linear-gradient(40deg, #45cafc, #4285f4); }\\n\\n.card.card-cascade .view {\\n  box-shadow: 0 3px 10px 0 rgba(0, 0, 0, 0.15), 0 3px 12px 0 rgba(0, 0, 0, 0.15);\\n  max-height: 105px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL3VzZXJQYWdlL0M6XFxwcm9qZWN0c1xcYWRtaW4vc3JjXFxhcHBcXGRhc2hib2FyZFxcdXNlclBhZ2VcXHVzZXJQYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVztFQUNYLGlCQUFnQjtFQUNoQixnQkFBZSxFQUNsQjs7QUFFRDtFQUNJLGdCQUFlO0VBQ2YsYUFBWTtFQUNaLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLGdCQUFlO0VBQ2YsYUFBWSxFQUNmOztBQUVEO0VBQ0ksVUFBUztFQUNULGFBQVksRUFDZjs7QUFFRDtFQUNJLDBCQUF5QixFQUM1Qjs7QUFFRDtFQUVJLHFEQUFvRCxFQUN2RDs7QUFFRDtFQUVRLCtFQUE4RTtFQUM5RSxrQkFBaUIsRUFDcEIiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvdXNlclBhZ2UvdXNlclBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2xhc3NpYy1hZG1pbi1jYXJkIC5jYXJkLWJvZHkge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgcGFkZGluZzogMC45cmVtO1xyXG59XHJcblxyXG4uY2xhc3NpYy1hZG1pbi1jYXJkIC5jYXJkLWJvZHkgcCB7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBvcGFjaXR5OiAwLjc7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG59XHJcblxyXG4uY2xhc3NpYy1hZG1pbi1jYXJkIC5jYXJkLWJvZHkgaDQge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLmNsYXNzaWMtYWRtaW4tY2FyZCAuY2FyZC1ib2R5IC5mbG9hdC1yaWdodCAuZmEge1xyXG4gICAgZm9udC1zaXplOiAzcmVtO1xyXG4gICAgb3BhY2l0eTogMC41O1xyXG59XHJcblxyXG4uY2xhc3NpYy1hZG1pbi1jYXJkIC5wcm9ncmVzcyB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBvcGFjaXR5OiAwLjc7XHJcbn1cclxuXHJcbi50YWJsZS11aSB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZTBlMGU5O1xyXG59XHJcblxyXG4uYmx1ZS1ncmFkaWVudCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCg1MGRlZywgIzQ1Y2FmYywgIzMwM2Y5Zik7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDBkZWcsICM0NWNhZmMsICM0Mjg1ZjQpO1xyXG59XHJcblxyXG4uY2FyZC5jYXJkLWNhc2NhZGUge1xyXG4gICAgLnZpZXcge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgM3B4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTUpLCAwIDNweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE1KTtcclxuICAgICAgICBtYXgtaGVpZ2h0OiAxMDVweDtcclxuICAgIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit }        from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\n//import { UserFormService} from './userForm.service';\r\nimport { AlertService, UserService } from 'src/app/_services';\r\nimport { UserConfig } from '../../_models/user'\r\nimport { DynamicFormComponent } from '../../_directives/dynamic-form/dynamic-form.component'\r\n\r\n@Component({\r\n  selector: 'app-userPage',\r\n  templateUrl: './userPage.component.html',\r\n  styleUrls: ['./userPage.component.scss']\r\n  //, providers: [UserConfig]\r\n})\r\n\r\nexport class UserPageComponent {\r\n    \r\n  public users=[];\r\n  \r\n\r\n\r\n  constructor(\r\n              private alertService: AlertService,\r\n              private userService: UserService\r\n              ) \r\n  {\r\n    \r\n    //this.userConfig = new UserConfig();\r\n    this.getUsers();\r\n  }\r\n\r\n\r\n  formSubmit(value) {\r\n    \r\n    this.userService.register(value)\r\n    .subscribe(\r\n        data => {\r\n          \r\n          this.alertService.success(\"Se agrego un nuevo usuario\");\r\n          this.getUsers();\r\n        },\r\n        error => {\r\n            this.alertService.error(\"Error al agregar usuario\");\r\n        });\r\n    //*/\r\n  }\r\n  \r\n  getUsers(){\r\n    this.userService.getAll()\r\n    .subscribe(\r\n        data => {\r\n          // console.log(data);\r\n          this.users =data;\r\n        },\r\n        error => {\r\n         // console.log(error);\r\n            this.alertService.error(error);\r\n        });\r\n  }\r\n\r\n  deleteUser(id) {\r\n    this.userService.delete(id)\r\n    .subscribe(\r\n        data => {\r\n          this.alertService.success(\"Eliminado Exitoso\");\r\n          this.getUsers();\r\n        },\r\n        error => {\r\n            this.alertService.error(error);\r\n        });\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA  } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { InputsModule, WavesModule, ButtonsModule } from 'angular-bootstrap-md'\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\nimport { DynamicFormComponent } from './_directives/dynamic-form/dynamic-form.component';\r\nimport { FormButtonComponent, FormInputComponent, FormSelectComponent, FormPasswordComponent, FormTagsComponent, FormMultiComponent} from './_directives/dynamic-form/componentes';\r\nimport { DynamicFieldDirective } from './_directives/dynamic-form/componentes/dynamic-field/dynamic-field.directive';\r\n@NgModule({\r\n  imports:[\r\n    CommonModule,\r\n    ReactiveFormsModule, \r\n    WavesModule, \r\n    ButtonsModule, \r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    InputsModule.forRoot()\r\n  ],\r\n  declarations: [ DynamicFieldDirective, DynamicFormComponent, FormButtonComponent, FormInputComponent, FormSelectComponent, FormPasswordComponent, FormTagsComponent,FormMultiComponent],\r\n  exports: [DynamicFormComponent],\r\n  entryComponents: [\r\n    FormButtonComponent,\r\n    FormInputComponent,\r\n    FormSelectComponent,\r\n    FormPasswordComponent,\r\n    FormTagsComponent,\r\n    FormMultiComponent    \r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA]\r\n})\r\nexport class DynamicFormModule {}"],"sourceRoot":""}